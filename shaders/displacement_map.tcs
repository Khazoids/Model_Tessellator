#version 410 core

layout (vertices=4) out;

uniform float tessellationLevel;

in VS_OUT {
	vec3 Position;
	vec3 Normal;
	vec2 TexCoord;
	vec3 Tangent;
} tcs_in[];


out TCS_OUT {
	vec3 Position;
	vec3 Normal;
	vec2 TexCoord;
	vec3 Tangent;
} tcs_out[];

void main()
{
	tcs_out[gl_InvocationID].Position = tcs_in[gl_InvocationID].Position;
	tcs_out[gl_InvocationID].Normal = tcs_in[gl_InvocationID].Normal;
	tcs_out[gl_InvocationID].TexCoord = tcs_in[gl_InvocationID].TexCoord;
	tcs_out[gl_InvocationID].Tangent = tcs_in[gl_InvocationID].Tangent;

	if(gl_InvocationID == 0)
	{
		gl_TessLevelInner[0] = tessellationLevel;
		gl_TessLevelInner[1] = tessellationLevel;

		gl_TessLevelOuter[0] = tessellationLevel;
		gl_TessLevelOuter[1] = tessellationLevel;
		gl_TessLevelOuter[2] = tessellationLevel;
		gl_TessLevelOuter[3] = tessellationLevel;
	}
}